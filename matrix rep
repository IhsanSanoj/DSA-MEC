#include <stdio.h>
struct Sparse {
int row;
int col;
int value;
};

int main() {
// Original 4x5 matrix
int matrix[4][5] = {
{0, 0, 0, 5, 0},
{0, 8, 0, 0, 0},
{0, 0, 0, 0, 0},
{1, 0, 0, 0, 4}
};

struct Sparse sparse[20]; // Enough space
int rows = 4, cols = 5, k = 1; // k starts from 1 (0 for metadata)

// Metadata: dimensions and number of non-zero elements
sparse[0].row = rows;
sparse[0].col = cols;
sparse[0].value = 0; // Will be updated later

// Store non-zero elements
for (int i = 0; i < rows; i++) {
for (int j = 0; j < cols; j++) {
if (matrix[i][j] != 0) {
sparse[k].row = i;
sparse[k].col = j;
sparse[k].value = matrix[i][j];
k++;
}
}
}

sparse[0].value = k - 1; // Total non-zero count

// Print sparse representation
printf("Row Col Value\n");
for (int i = 0; i < k; i++) {
printf("%d %d %d\n", sparse[i].row, sparse[i].col, sparse[i].value);
}
return 0;
}
